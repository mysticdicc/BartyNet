@inject WebsitePostAPI WebsitePostAPI
@inject IJSRuntime JSRuntime

@page "/home"

<PageTitle>Home</PageTitle>

<MudStack Style="padding-bottom: 1rem;">
    <div style="width: 100%; padding-top: 1rem; padding-right: 1.5rem; padding-left: 1.5rem;">
        <div class="home_top">
            <div class="home_top_col_left">
                <div style="width: 100%;">
                    <MudText Typo="Typo.h3" Align="Align.Center" Style="padding-bottom: 1rem;">
                        Life of Barty
                    </MudText>
                </div>
                <div style="width: 100%;">
                    <div style="padding-left: 2rem; padding-right: 2rem;">
                        <MudText Typo="Typo.body1" Align="Align.Center">
                            Documenting the life and adventures of Barty the service dog
                        </MudText>
                    </div>
                    <div style="width: 100%; display: flex; padding-top: 1rem; padding-bottom: 1rem;">
                        <img src="/img/web/instagram_icon.png" class="home_insta" onclick="@(() => OpenInstagram())" />
                    </div>
                </div>
            </div>
            <div class="home_top_col_right">
                <div style="width: 100%; height: 100%; display: flex;">
                    <MudImage Src="/img/web/landscape_barty.jpg" Class="home_header_image" Fluid="true" ObjectFit="ObjectFit.Contain" />
                </div>
            </div>
        </div>
    </div>
    @if (null != recentPosts) 
    {
        <div style="padding-left: 1rem; padding-right: 1rem; width: fit-content; padding-top: 1rem;">
            <MudText Typo="Typo.h5" Style="margin-left: 1rem; margin-right: 1rem;">
                Recent Blog Posts
            </MudText>
            <MudDivider/>
        </div>

        foreach (var post in recentPosts) 
        {
            <RecentPost websitePost="post"/>
        }
    }
</MudStack>

@code {
    List<WebsitePost>? recentPosts;

    async protected override Task OnInitializedAsync()
    {
        await FetchRecentPosts();
        await base.OnInitializedAsync();
    }

    async Task FetchRecentPosts() 
    {
        recentPosts = await WebsitePostAPI.GetRecentByType(WebsitePost.PostType.Blog);
    }

    async Task OpenInstagram() 
    {
        await JSRuntime.InvokeAsync<object>("open", "https://www.instagram.com/the_life_of_barty22/", "_blank");
    }
}